{"ast":null,"code":"var _jsxFileName = \"/Users/archit/Downloads/NewsFlashPhone/App.js\";\nimport * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen from \"./home\";\nimport QueryScreen from \"./query\";\nimport HeadlineScreen, { collectTop } from \"./headlines\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar NewsFlashTheme = {\n  dark: true,\n  colors: {\n    primary: '#2d6ff4',\n    background: 'rgb(242, 242, 242)',\n    card: 'rgb(0, 0, 0)',\n    text: '#2d6ff4',\n    border: 'rgb(0, 0, 0)',\n    notification: 'rgb(255, 69, 58)'\n  }\n};\n\nfunction HomeTab() {\n  var _this = this;\n\n  return React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'Search') {\n            iconName = focused ? 'ios-globe' : 'ios-globe-outline';\n          } else if (route.name === 'Top Headlines') {\n            iconName = focused ? 'ios-list' : 'ios-list-outline';\n            collectTop();\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 16\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: '#2d6ff4',\n      inactiveTintColor: 'gray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Search\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Top Headlines\",\n    component: HeadlineScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    theme: NewsFlashTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Search\",\n    component: HomeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Query Results\",\n    component: QueryScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/archit/Downloads/NewsFlashPhone/App.js"],"names":["React","Ionicons","NavigationContainer","DefaultTheme","createStackNavigator","createBottomTabNavigator","HomeScreen","QueryScreen","HeadlineScreen","collectTop","Stack","Tab","NewsFlashTheme","dark","colors","primary","background","card","text","border","notification","HomeTab","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","App"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Button, View, Text } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen from './home';\nimport QueryScreen from './query';\nimport HeadlineScreen, { collectTop } from './headlines';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nconst NewsFlashTheme = {\n  dark: true,\n  colors: {\n    primary: '#2d6ff4',\n    background: 'rgb(242, 242, 242)',\n    card: 'rgb(0, 0, 0)',\n    text: '#2d6ff4',\n    border: 'rgb(0, 0, 0)',\n    notification: 'rgb(255, 69, 58)',\n  },\n};\n\nfunction HomeTab() {\n  return (\n    <Tab.Navigator \n    screenOptions={({ route }) => ({\n      tabBarIcon: ({ focused, color, size }) => {\n        let iconName;\n\n        if (route.name === 'Search') {\n          iconName = focused ? 'ios-globe' : 'ios-globe-outline';\n        } else if (route.name === 'Top Headlines') {\n          iconName = focused ? 'ios-list' : 'ios-list-outline';\n          collectTop();\n        }\n\n        return <Ionicons name={iconName} size={size} color={color} />;\n      },\n    })}\n  tabBarOptions={{\n      activeTintColor: '#2d6ff4',\n      inactiveTintColor: 'gray',\n    }}>\n      <Tab.Screen name=\"Search\" component={HomeScreen} />\n      <Tab.Screen name=\"Top Headlines\" component={HeadlineScreen} />\n    </Tab.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer theme={NewsFlashTheme}>\n      <Stack.Navigator initialRouteName=\"Search\">\n        <Stack.Screen name=\"Search\" component={HomeTab} />\n        <Stack.Screen name=\"Query Results\" component={QueryScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}