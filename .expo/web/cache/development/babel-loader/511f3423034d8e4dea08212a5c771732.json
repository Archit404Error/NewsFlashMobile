{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/archit/Downloads/NewsFlashPhone/headlines.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles } from \"./styles\";\nvar topData = {};\nvar topArticles = {};\nvar sources = [];\nexport function collectTop() {\n  var topRes, source;\n  return _regeneratorRuntime.async(function collectTop$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://web-production-3b7b.up.railway.app/topApi\"));\n\n        case 2:\n          topRes = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(topRes.json());\n\n        case 5:\n          topData = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(topData[\"top_articles\"][0]);\n\n        case 8:\n          topArticles = _context.sent;\n\n          for (source in topArticles) {\n            sources.push(source);\n          }\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport default (function () {\n  console.log(sources.length);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, sources.map(function (source, index) {\n    console.log(source);\n    return React.createElement(View, {\n      style: styles.queryView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      key: index,\n      style: styles.subArticleText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, source));\n  }));\n});","map":{"version":3,"sources":["/Users/archit/Downloads/NewsFlashPhone/headlines.js"],"names":["React","styles","topData","topArticles","sources","collectTop","fetch","topRes","json","source","push","console","log","length","container","map","index","queryView","subArticleText"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,MAAT;AAEA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAIC,OAAO,GAAG,EAAd;AAEA,OAAO,SAAeC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACgBC,KAAK,CAAC,6CAAD,CADrB;;AAAA;AACCC,UAAAA,MADD;AAAA;AAAA,2CAEWA,MAAM,CAACC,IAAP,EAFX;;AAAA;AAELN,UAAAA,OAFK;AAAA;AAAA,2CAGeA,OAAO,CAAC,cAAD,CAAP,CAAwB,CAAxB,CAHf;;AAAA;AAGLC,UAAAA,WAHK;;AAIL,eAASM,MAAT,IAAmBN,WAAnB,EAAgC;AAC9BC,YAAAA,OAAO,CAACM,IAAR,CAAaD,MAAb;AACD;;AANI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASP,gBAAe,YAAM;AACjBE,EAAAA,OAAO,CAACC,GAAR,CAAYR,OAAO,CAACS,MAApB;AACA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACa,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIV,OAAO,CAACW,GAAR,CAAY,UAACN,MAAD,EAASO,KAAT,EAAmB;AAC7BL,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAIR,MAAM,CAACgB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAID,KAAb;AAAoB,MAAA,KAAK,EAAIf,MAAM,CAACiB,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqDT,MAArD,CADF,CADF;AAKD,GAPD,CAFJ,CADF;AAcD,CAhBH","sourcesContent":["import * as React from 'react';\nimport { View, Text } from 'react-native';\nimport { styles } from './styles';\n\nvar topData = {};\nvar topArticles = {};\nvar sources = [];\n\nexport async function collectTop() {\n  const topRes = await fetch(\"https://web-production-3b7b.up.railway.app/topApi\");\n  topData = await topRes.json();\n  topArticles = await topData[\"top_articles\"][0];\n  for (var source in topArticles) {\n    sources.push(source);\n  }\n}\n\nexport default () => {\n    console.log(sources.length);\n    return (\n      <View style={styles.container}>\n        {\n          sources.map((source, index) => {\n            console.log(source);\n            return(\n              <View style = {styles.queryView}>\n                <Text key = {index} style = {styles.subArticleText}>{source}</Text>\n              </View>\n            );\n          })\n        }\n      </View>\n    );\n  }"]},"metadata":{},"sourceType":"module"}